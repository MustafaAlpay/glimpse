sudo: required

services: docker

os:
    - linux

language: c

# XXX: couldn't see how it's possible to define a per-stage environment
# variable matrix so this is quite verbose...
jobs:
    include:

        # The 'quick build' stage avoids needing to compile the pcl subproject
        # and instead links with the ubuntu packaged libpcl. It also doesn't
        # install blender or clone the glimpse-training-data + glimpse-models
        # repos...
        - stage: quick checks
          env:
              - _="Debug Build"
              - CONFIG_OPTS="--buildtype=debug -Duse_system_libs=true"
          script: sudo docker run -t -i -v $TRAVIS_BUILD_DIR:/home/$USER/build
            -e TRAVIS_BUILD_DIR="/home/$USER/build"
            -e BUILD_ONLY=1
            -e CONFIG_OPTS="$CONFIG_OPTS"
            final-travis-ci-image ./travis/travis-ci-build.sh
        - stage: quick checks
          env:
              - _="Release Build"
              - CFLAGS="-march=native -mtune=native"
              - CXXFLAGS="-march=native -mtune=native"
              - CONFIG_OPTS="--buildtype=release -Duse_system_libs=true"
          script: sudo docker run -t -i -v $TRAVIS_BUILD_DIR:/home/$USER/build
            -e TRAVIS_BUILD_DIR="/home/$USER/build"
            -e BUILD_ONLY=1
            -e CONFIG_OPTS="$CONFIG_OPTS"
            final-travis-ci-image ./travis/travis-ci-build.sh

        # Verify that the Blender addon can be set up and glimpse-cli.py --info runs
        - stage: quick checks
          env:
              - _="Blender Addon Check"
          script: sudo docker run -t -i -v $TRAVIS_BUILD_DIR:/home/$USER/build
            -e TRAVIS_BUILD_DIR="/home/$USER/build"
            final-travis-ci-image ./travis/travis-ci-check-training-data.sh

        # Only if the quick builds pass we will do a full compilation of
        # our dependencies as subprojects and test our blender addon and
        # pre-trained model
        - stage: build
          env:
              - _="Debug Build"
              - CONFIG_OPTS="--buildtype=debug -Duse_system_libs=false"
          script: sudo docker run -t -i -v $TRAVIS_BUILD_DIR:/home/$USER/build
            -e TRAVIS_BUILD_DIR="/home/$USER/build"
            -e CONFIG_OPTS="$CONFIG_OPTS"
            final-travis-ci-image ./travis/travis-ci-build.sh
        - stage: build
          env:
              - _="Release Build"
              - CFLAGS="-march=native -mtune=native"
              - CXXFLAGS="-march=native -mtune=native"
              - CONFIG_OPTS="--buildtype=release -Duse_system_libs=false"
          script: sudo docker run -t -i -v $TRAVIS_BUILD_DIR:/home/$USER/build
            -e TRAVIS_BUILD_DIR="/home/$USER/build"
            -e CONFIG_OPTS="$CONFIG_OPTS"
            final-travis-ci-image ./travis/travis-ci-build.sh
        - stage: build
          env:
              - _="Android Debug Build"
              - ANDROID=1
              - CONFIG_OPTS="--cross-file=../android-arm64-cross-file.txt --buildtype=debug -Ddlib:support_gui=no"
          script: sudo docker run -t -i -v $TRAVIS_BUILD_DIR:/home/$USER/build
            -e TRAVIS_BUILD_DIR="/home/$USER/build"
            -e ANDROID_BUILD=1
            -e BUILD_ONLY=1
            -e CONFIG_OPTS="$CONFIG_OPTS"
            final-travis-ci-image ./travis/travis-ci-build.sh
        - stage: build
          env:
              - _="Android Release Build"
              - ANDROID=1
              - CONFIG_OPTS="--cross-file=../android-arm64-cross-file.txt --buildtype=release -Ddlib:support_gui=no"
          script: sudo docker run -t -i -v $TRAVIS_BUILD_DIR:/home/$USER/build
            -e TRAVIS_BUILD_DIR="/home/$USER/build"
            -e ANDROID_BUILD=1
            -e BUILD_ONLY=1
            -e CONFIG_OPTS="$CONFIG_OPTS"
            final-travis-ci-image ./travis/travis-ci-build.sh

cache:
    directories:
        - blender-2.79-linux-glibc219-x86_64

before_install:
    - docker pull rib1/glimpse-travis
    - ./travis/travis-ci-prep-docker-image.sh rib1/glimpse-travis final-travis-ci-image
